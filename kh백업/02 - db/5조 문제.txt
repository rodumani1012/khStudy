---1.유럽 대륙에서 근무하고있는 사원들의 커미션이 측정된 사원만 커미션순으로 내림차순 하고, 측정된 사원의 이름과 대륙이름, 커미션, 직업을 출력 (희수)
SELECT FIRST_NAME, REGION_NAME, COMMISSION_PCT, JOB_ID FROM EMPLOYEES JOIN DEPARTMENTS USING (DEPARTMENT_ID) JOIN LOCATIONS USING (LOCATION_ID )
JOIN COUNTRIES USING ( COUNTRY_ID ) JOIN REGIONS USING ( REGION_ID )
WHERE REGION_NAME = 'Europe' 
AND COMMISSION_PCT IS NOT NULL 
ORDER BY COMMISSION_PCT DESC; 
---2.성이 'Marvins'인 사원의 월급보다 평균월급이 높은 부서를 부서이름, 도시를 출력하시오.(희수)

SELECT DEPARTMENT_NAME,CITY,AVG(SALARY) FROM EMPLOYEES JOIN DEPARTMENTS
USING (DEPARTMENT_ID) JOIN LOCATIONS USING (LOCATION_ID)
HAVING AVG(SALARY)>(SELECT SALARY FROM EMPLOYEES WHERE LAST_NAME = 'Marvins')
GROUP BY DEPARTMENT_NAME, CITY;

---3.'united states OF america' 에서 근무하는 매니저의 평균월급을 구하시오(준연)
 SELECT AVG(SALARY)
 FROM EMPLOYEES 
 WHERE EMPLOYEE_ID IN(SELECT MANAGER_ID FROM DEPARTMENTS 
 JOIN LOCATIONS USING (LOCATION_ID) JOIN COUNTRIES USING (COUNTRY_ID)
 WHERE COUNTRY_NAME='United States of America');

-- 4. 직업(JOB_ID)별로 20,50,80번 부서(DEPARTMENT_ID)의 월급의 총합을 출력하시오.(준연)
-- ※ DECODE 사용하여 푸시오.
-- 부서별 해당 번호에 각각 별칭을 주시오.EX) 20번부서,50번부서,80번부서
SELECT JOB_ID,SUM(DECODE(DEPARTMENT_ID,20,SALARY)) "20번부서",
				SUM(DECODE(DEPARTMENT_ID,50,SALARY)) "50번부서",
					SUM(DECODE(DEPARTMENT_ID,80,SALARY)) "80번부서"
FROM EMPLOYEES
GROUP BY JOB_ID;

-- 5. 월급이 평균월급보다 더 많고  성(LAST_NAME)에 'u'를 포함하는 사람의 부서에서  근무하는 
-- 직원의 번호, 이름 ,급여를 표시하시오(준연)
SELECT EMPLOYEE_ID,FIRST_NAME,SALARY
FROM EMPLOYEES
WHERE SALARY>(SELECT AVG(SALARY)FROM EMPLOYEES) AND DEPARTMENT_ID IN(SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE LAST_NAME LIKE '%u%');

-- 6. 자신의 매니저보다 먼저 고용된 직원의 이름과 고용일,
-- 그리고 그 매니저의 이름과 고용일을 출력하시오
SELECT E.FIRST_NAME, E.HIRE_DATE, M.FIRST_NAME, M.HIRE_DATE
FROM EMPLOYEES E, EMPLOYEES M
WHERE E.MANAGER_ID = M.EMPLOYEE_ID AND E.HIRE_DATE < M.HIRE_DATE;
 

--7.각 직업명(job_title)별로 월급(salary)의 총합을 구하고자 한다.월급(salary) 총합이 가장 높은 업무부터 직업명과 월급을 출력하시오
--단 월급총합이 30,000보다 큰 업무만 출력하시오.(나)
SELECT J.JOB_TITLE, SUM(E.SALARY)
FROM JOBS J, EMPLOYEES E
WHERE E.JOB_ID = J.JOB_ID
GROUP BY J.JOB_TITLE
HAVING SUM(E.SALARY) > 30000
ORDER BY SUM(E.SALARY) DESC;

SELECT JOB_TITLE,SUM(SALARY)
FROM EMPLOYEES JOIN JOBS USING(JOB_ID)
GROUP BY JOB_TITLE
HAVING SUM(SALARY)>30000
ORDER BY SUM(SALARY) DESC;

--8.FIRST_NAME이 Lisa인 사람과 같은 부서에 근무하는 사람들의 이름과 월급을 내림차순 출력하고(윤회형님)

SELECT FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Lisa')
ORDER BY SALARY DESC;

--9.여기서 가장 많은 월급을 받는 사람의 FIRST_NAME과 도시를 출력(윤회형님)
SELECT FIRST_NAME , CITY
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID) JOIN LOCATIONS USING(LOCATION_ID)
WHERE SALARY = (SELECT MAX(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME = 'Lisa'));

--10. 입사일이 01 01 01 ~ 04 12 31 사이인 사원중 입사일이 02년인 사원을 제외하고
--이름, 급여, 부서번호, 입사일을 출력하자.(입사일을 오름차순으로 정렬)

SELECT FIRST_NAME, SALARY, DEPARTMENT_ID, HIRE_DATE
FROM EMPLOYEES
WHERE HIRE_DATE >= '010101'
AND HIRE_DATE <= '041231' AND HIRE_DATE NOT IN (SELECT HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '02%')
ORDER BY HIRE_DATE ASC;